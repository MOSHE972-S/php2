name: Ensure .env is fully removed

permissions:
  contents: write

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  remove-env:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Ensure python3 & git-filter-repo
        run: |
          echo "=== Checking python3 ==="
          python3 --version || { echo "python3 not found! Installing..." && sudo apt-get update && sudo apt-get install -y python3-pip; }
          echo "=== Checking git-filter-repo ==="
          command -v git-filter-repo || { echo "git-filter-repo not found! Installing..." && pip3 install git-filter-repo; }
          echo "=== python3 & git-filter-repo ready ==="

      - name: Configure Git user
        run: |
          echo "=== Configuring Git user ==="
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git config --list

      - name: Remove .env from history
        run: |
          echo "=== Running git filter-repo ==="
          git filter-repo --path .env --invert-paths --force \
            && echo "✅ .env stripped from all history" \
            || { echo "❌ git-filter-repo failed" && exit 1; }

      - name: Ensure .env absent in working tree
        run: |
          echo "=== Deleting .env in working tree (if exists) ==="
          rm -f .env
          echo "Working-tree status after rm:"
          git status

      - name: Commit removal (always)
        run: |
          echo "=== Staging and committing deletion (or empty commit) ==="
          # stage deletion (no-op if file not present)
          git rm -f .env || true
          # allow empty commit so we always record an action
          git commit -m "ci: ensure .env removed from history and working tree" --allow-empty
          echo "--- Last 5 commits ---"
          git log --oneline -n 5

      - name: Push to main (force)
        run: |
          echo "=== Pushing to main with --force ==="
          git push origin main --force \
            && echo "✅ Push succeeded" \
            || { echo "❌ Push failed" && exit 1; }
