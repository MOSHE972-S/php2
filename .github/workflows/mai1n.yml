name: Remove .env from history automatically

permissions:
  contents: write

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  remove-env-history:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Verify checkout
        run: |
          echo "=== Git branches and remotes before any change ==="
          git branch -vv
          git remote -v || echo "⚠️ No remotes defined yet"

      - name: Ensure python3 & git-filter-repo
        run: |
          echo "=== Checking python3 ==="
          python3 --version || { echo "python3 not found! Installing..." && sudo apt-get update && sudo apt-get install -y python3-pip; }
          echo "=== Checking git-filter-repo ==="
          command -v git-filter-repo || { echo "git-filter-repo not found! Installing..." && pip3 install git-filter-repo; }
          echo "=== python3 & git-filter-repo ready ==="

      - name: Configure Git user
        run: |
          echo "=== Configuring Git user ==="
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          echo "--- git config list ---"
          git config --list

      - name: Remove .env from history
        run: |
          echo "=== Running git filter-repo ==="
          git filter-repo --path .env --invert-paths --force \
            && echo "✅ .env removed from history" \
            || { echo "❌ git-filter-repo failed" && exit 1; }

      - name: Show status after filter-repo
        run: |
          echo "=== Git status after filter-repo ==="
          git status

      - name: Remove .env from working tree
        run: |
          echo "=== Removing .env from working tree if exists ==="
          if [ -f .env ]; then
            rm .env
            echo "✅ .env deleted"
          else
            echo "ℹ️ .env not present in working tree"
          fi
          git status

      - name: Commit changes if detected
        run: |
          echo "=== Checking for changes ==="
          CHANGED=false
          git diff --quiet || CHANGED=true
          if [ "$CHANGED" = "true" ]; then
            echo "🔄 Changes detected, committing..."
            git add .
            git commit -m "ci: remove .env from history and working tree"
            echo "--- Last 5 commits ---"
            git log --oneline -n 5
          else
            echo "ℹ️ No changes to commit"
          fi

      - name: Ensure origin remote with credentials
        run: |
          echo "=== Ensuring 'origin' remote is set with GITHUB_TOKEN ==="
          # אם אין origin, נוסיף אותו
          git remote get-url origin || git remote add origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          # ועדכן כל מקרה שהכתובת תהיה עם הטוקן
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git remote -v

      - name: Push commits (force)
        run: |
          echo "=== Pushing to origin main --force ==="
          git push origin main --force \
            && echo "✅ Push succeeded" \
            || { echo "❌ Push failed" && exit 1; }
